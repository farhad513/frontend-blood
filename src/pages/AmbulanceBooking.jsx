/* eslint-disable no-unused-vars */
import React, { useState, useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import { useNavigate } from "react-router-dom";
import toast, { Toaster } from "react-hot-toast";
import { bookAmbulance, messageClear } from "../store/reducers/homeReducer";
import { FaClock } from "react-icons/fa";
import SeoHelmet from "../components/SEO/SEO";

const AmbulanceBooking = () => {
  const { userInfo } = useSelector((state) => state.user);
  const { errorMessage, successMessage } = useSelector((state) => state.home);
  const dispatch = useDispatch();
  const navigate = useNavigate();

  const [pickupTime, setPickupTime] = useState("");
  const [pickupAddress, setPickupAddress] = useState("");
  const [dropAddress, setDropAddress] = useState("");
  const [age, setAge] = useState("");
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [rawPickupDate, setRawPickupDate] = useState("");
  const [pickupDate, setPickupDate] = useState("");
  const [ambulanceType, setAmbulanceType] = useState("");
useEffect(() => {
    window.scrollTo({
      behavior: "smooth",
      left: 0,
      top: 0,
    });
  }, []);

  const handlePickupDateChange = (e) => {
    const engDate = e.target.value;
    setRawPickupDate(engDate);
    const [year, month, day] = engDate.split("-");
    setPickupDate(`${day}-${month}-${year}`);
  };
  const handleBooking = () => {
    if (!pickupDate || !pickupTime || !pickupAddress || !dropAddress || !age) {
      toast.error("рж╕ржм рждржерзНржп ржкрзВрж░ржг ржХрж░рзБржиред");
      return;
    }

    const selectedDateTime = new Date(`${pickupDate}T${pickupTime}`);
    const now = new Date();
    if (selectedDateTime <= now) {
      toast.error("ржкрж┐ржХржЖржкрзЗрж░ рж╕ржорзЯ ржмрж░рзНрждржорж╛ржи рж╕ржорзЯрзЗрж░ ржкрж░рзЗ рж╣рждрзЗ рж╣ржмрзЗред");
      return;
    }

    setIsSubmitting(true);

    const bookingData = {
      userId: userInfo?.id,
      name: userInfo?.name,
      phone: userInfo?.phone,
      pickupDate,
      pickupTime,
      pickupAddress,
      dropAddress,
      age,
      ambulanceType
    };

    dispatch(bookAmbulance(bookingData));
  };

  useEffect(() => {
    if (errorMessage) {
      toast.error(errorMessage);
      setIsSubmitting(false);
      dispatch(messageClear());
    }

    if (successMessage) {
      toast.success(successMessage);
      setIsSubmitting(false);
      setTimeout(() => {
        navigate("/");
        dispatch(messageClear());
      }, 2000);

      setPickupDate("");
      setPickupTime("");
      setPickupAddress("");
      setDropAddress("");
      setAge("");
    }
  }, [errorMessage, successMessage, dispatch, navigate]);

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-white py-10 px-4">
      <SeoHelmet
        title={"ржЕрзНржпрж╛ржорзНржмрзБрж▓рзЗржирзНрж╕ рж╕рзЗржмрж╛ | ржжрзНрж░рзБржд ржУ ржмрж┐рж╢рзНржмрж╕рзНржд рж░ржХрзНржд ржУ рж░рзЛржЧрзА ржкрж░рж┐ржмрж╣ржи"}
        description={
          "ржжрзНрж░рзБржд ржЕрзНржпрж╛ржорзНржмрзБрж▓рзЗржирзНрж╕ ржЦрзБржБржЬрзБржи ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗрж░ ржпрзЗржХрзЛржирзЛ рж╕рзНржерж╛ржи ржерзЗржХрзЗред ICU, ржиржи-AC, ржбрзЗржбржмржбрж┐ ржХрзНржпрж╛рж░рж┐рзЯрж╛рж░ ржУ ржЕржХрзНрж╕рж┐ржЬрзЗржи рж╕рж╛ржкрзЛрж░рзНржЯ рж╕рж╣ рж╕ржХрж▓ ржзрж░ржирзЗрж░ ржЕрзНржпрж╛ржорзНржмрзБрж▓рзЗржирзНрж╕ рж╕рж╛рж░рзНржнрж┐рж╕ ржПржЦржи ржЕржирж▓рж╛ржЗржирзЗ ржмрзБржХ ржХрж░рзБржиред"
        }
        keywords={
          "ржЕрзНржпрж╛ржорзНржмрзБрж▓рзЗржирзНрж╕, ржПржорзНржмрзБрж▓рзЗржирзНрж╕ рж╕рзЗржмрж╛ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢, ICU ржЕрзНржпрж╛ржорзНржмрзБрж▓рзЗржирзНрж╕, ржЕржХрзНрж╕рж┐ржЬрзЗржи рж╕рж╛ржкрзЛрж░рзНржЯ ржЕрзНржпрж╛ржорзНржмрзБрж▓рзЗржирзНрж╕, Deadbody Carrier, Ambulance BD, Ambulance Service Bangladesh"
        }
        url={"https://medifasthealthcare.com/ambulance"}
      />

      <Toaster position="top-center" reverseOrder={false} />
      <div className="max-w-4xl mx-auto bg-white p-8 rounded-3xl shadow-2xl">
        <h2 className="text-3xl font-extrabold text-center text-blue-700 mb-8">
          ЁЯЪС ржЕрзНржпрж╛ржорзНржмрзБрж▓рзЗржирзНрж╕ ржмрзБржХрж┐ржВ ржлрж░рзНржо
        </h2>

        <div className="bg-red-100 text-red-700 text-center px-6 py-4 rounded-lg mb-6 font-medium">
          ржЬрж░рзБрж░рж┐ ржкрж░рж┐рж╕рзНржерж┐рждрж┐рждрзЗ рж╕рж░рж╛рж╕рж░рж┐{" "}
          <a href="tel:01336116868" className="underline font-bold">
            01336116868
          </a>{" "}
          ржиржорзНржмрж░рзЗ ржХрж▓ ржХрж░рзБржи
        </div>

        <form
          onSubmit={(e) => {
            e.preventDefault();
            handleBooking();
          }}
          className="grid grid-cols-1 md:grid-cols-2 gap-6"
        >
          <div>
            <label className="block mb-1 text-sm font-semibold">ржирж╛ржо</label>
            <input
              type="text"
              value={userInfo?.name || ""}
              disabled
              className="w-full px-4 py-3 border rounded-lg bg-gray-100"
              placeholder="ржирж╛ржо"
            />
          </div>

          <div>
            <label className="block mb-1 text-sm font-semibold">
              ржорзЛржмрж╛ржЗрж▓ ржиржорзНржмрж░
            </label>
            <input
              type="text"
              value={userInfo?.phone || ""}
              disabled
              className="w-full px-4 py-3 border rounded-lg bg-gray-100"
              placeholder="ржорзЛржмрж╛ржЗрж▓ ржиржорзНржмрж░"
            />
          </div>
<div>
  <label className="block mb-1 text-sm font-semibold">
    ржЕрзНржпрж╛ржорзНржмрзБрж▓рзЗржирзНрж╕рзЗрж░ ржзрж░ржг
  </label>
  <select
    value={ambulanceType}
    onChange={(e) => setAmbulanceType(e.target.value)}
    className="w-full px-4 py-3 border rounded-lg"
  >
    <option value="">-- ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи --</option>
    <option value="Normal">ржирж░ржорж╛рж▓ (рж╕рж╛ржзрж╛рж░ржг)</option>
    <option value="AC">ржПрж╕рж┐ (AC)</option>
    <option value="Non-AC">ржиржи-ржПрж╕рж┐</option>
    <option value="ICU">ржЖржЗрж╕рж┐ржЗржЙ (ICU)</option>
    <option value="Oxygen Support">ржЕржХрзНрж╕рж┐ржЬрзЗржи рж╕рж╛ржкрзЛрж░рзНржЯ</option>
    <option value="Deadbody Carrier">ржбрзЗржбржмржбрж┐ ржХрзНржпрж╛рж░рж┐рзЯрж╛рж░</option>
  </select>
</div>

          <div>
            <label className="block mb-1 text-sm font-semibold">ржмрзЯрж╕</label>
            <input
              type="number"
              value={age}
              onChange={(e) => setAge(e.target.value)}
              className="w-full px-4 py-3 border rounded-lg"
              placeholder="ржмрзЯрж╕"
            />
          </div>

          <div>
            <label className="block mb-1 text-sm font-semibold">
              ржкрж┐ржХржЖржк рждрж╛рж░рж┐ржЦ
            </label>
            <input
              type="date"
              //   value={pickupDate}
              //   onChange={(e) => setPickupDate(e.target.value)}
              value={rawPickupDate}
              onChange={handlePickupDateChange}
              className="w-full px-4 py-3 border rounded-lg"
            />
          </div>

          <div>
            <label className="block mb-1 text-sm font-semibold">
              ржкрж┐ржХржЖржк рж╕ржорзЯ
            </label>
            <div className="relative">
              <input
                type="time"
                value={pickupTime}
                onChange={(e) => setPickupTime(e.target.value)}
                className="w-full px-4 py-3 border rounded-lg pr-10"
                style={{ WebkitAppearance: "none", MozAppearance: "textfield" }}
              />
              <FaClock
                className="absolute top-1/2 right-3 transform -translate-y-1/2 text-black pointer-events-none"
                size={20}
              />
            </div>
          </div>

          <div className="md:col-span-2">
            <label className="block mb-1 text-sm font-semibold">
              ржкрж┐ржХржЖржк ржарж┐ржХрж╛ржирж╛
            </label>
            <textarea
              value={pickupAddress}
              onChange={(e) => setPickupAddress(e.target.value)}
              className="w-full px-4 py-3 border rounded-lg"
              rows={2}
              placeholder="ржкрж┐ржХржЖржк рж▓рзЛржХрзЗрж╢ржи рж▓рж┐ржЦрзБржи"
            ></textarea>
          </div>

          <div className="md:col-span-2">
            <label className="block mb-1 text-sm font-semibold">
              ржбрзНрж░ржк ржарж┐ржХрж╛ржирж╛
            </label>
            <textarea
              value={dropAddress}
              onChange={(e) => setDropAddress(e.target.value)}
              className="w-full px-4 py-3 border rounded-lg"
              rows={2}
              placeholder="ржЧржирзНрждржмрзНржп рж▓рзЛржХрзЗрж╢ржи рж▓рж┐ржЦрзБржи"
            ></textarea>
          </div>

          <div className="md:col-span-2 mt-4">
            <button
              type="submit"
              disabled={isSubmitting}
              className={`w-full py-3 rounded-xl text-white text-lg font-bold transition duration-200 cursor-pointer ${
                isSubmitting ? "bg-blue-300" : "bg-blue-600 hover:bg-blue-700"
              }`}
            >
              {isSubmitting ? "ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзБржи..." : "ржмрзБржХрж┐ржВ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рзБржи"}
            </button>
          </div>
        </form>
        {/* ржлрж░рзНржорзЗрж░ ржирж┐ржЪрзЗ рждржерзНржп ржпрзЛржЧ */}
        <div className="max-w-4xl mx-auto mt-12 bg-blue-50 p-6 rounded-2xl shadow-md">
          <h3 className="text-2xl font-bold text-blue-700 mb-4">
            ЁЯХТ ржХрзА ржЖрж╢рж╛ ржХрж░рждрзЗ ржкрж╛рж░рзЗржи
          </h3>

          <div className="space-y-4 text-gray-800 text-base leading-relaxed">
            <div className="flex items-start gap-3">
              <p>
                ржмрзБржХрж┐ржВрзЯрзЗрж░ ржкрж░ рззрзж ржорж┐ржирж┐ржЯрзЗрж░ ржоржзрзНржпрзЗ ржЖржорж╛ржжрзЗрж░ ржХрж╛рж╕рзНржЯржорж╛рж░ рж╕рж╛рж░рзНржнрж┐рж╕ ржкрзНрж░рждрж┐ржирж┐ржзрж┐
                ржЖржкржирж╛рж░ рж╕ржЩрзНржЧрзЗ ржлрзЛржирзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░ржмрзЗржи ржмрзБржХрж┐ржВ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рж╛рж░ ржЬржирзНржпред
              </p>
            </div>

            <div className="flex items-start gap-3">
              <p>
                ржЖржорж░рж╛ ржжрзНрж░рзБрждрждржо рж╕ржоржпрж╝рзЗ ржЕрзНржпрж╛ржорзНржмрзБрж▓рзЗржирзНрж╕ ржкрж╛ржарж╛ржирзЛрж░ рж▓ржХрзНрж╖рзНржпрзЗ ржХрж╛ржЬ ржХрж░рж┐ тАФ рждржмрзЗ
                ржЯрзНрж░рзНржпрж╛ржлрж┐ржХ ржмрж╛ ржЖржмрж╣рж╛ржУрзЯрж╛рж░ ржорждрзЛ ржХрж╛рж░ржг рж╕ржорзЯржХрзЗ ржкрзНрж░ржнрж╛ржмрж┐ржд ржХрж░рждрзЗ ржкрж╛рж░рзЗред
              </p>
            </div>

            <div className="flex items-start gap-3">
              <p>
                ржЖржкржирж╛рж░ ржмрзНржпржХрзНрждрж┐ржЧржд рждржерзНржп рж╕рж░рзНржмрзЛржЪрзНржЪ ржирж┐рж░рж╛ржкрждрзНрждрж╛рж░ рж╕ржЩрзНржЧрзЗ рж╕ржВрж░ржХрзНрж╖рж┐ржд ржерж╛ржХржмрзЗ
                ржПржмржВ рж╢рзБржзрзБржорж╛рждрзНрж░ рж╕рзЗржмрж╛ ржХрж╛рж░рзНржпржХрзНрж░ржо ржУ ржорж╛ржи ржпрж╛ржЪрж╛ржЗрзЯрзЗрж░ ржЙржжрзНржжрзЗрж╢рзНржпрзЗ ржмрзНржпржмрж╣рзГржд
                рж╣ржмрзЗред
              </p>
            </div>

            <div className="flex items-start gap-3">
              <p>
                ржЪрж╛рж▓ржХ ржЖржкржирж╛ржХрзЗ рж╕рж░рж╛рж╕рж░рж┐ ржлрзЛржи ржХрж░рзЗ ржкрж┐ржХржЖржк рж▓рзЛржХрзЗрж╢ржи ржирж┐рж╢рзНржЪрж┐ржд ржХрж░ржмрзЗржи ржПржмржВ ржПржХржЬржи
                ржкрзНрж░рж╢рж┐ржХрзНрж╖рж┐ржд рж╕рж╣ржХрж╛рж░рзАрж░ ржЙржкрж╕рзНржерж┐рждрж┐рждрзЗ ржпрж╛рждрзНрж░рж╛ ржирж┐рж╢рзНржЪрж┐ржд ржУ ржирж┐рж░рж╛ржкржжржнрж╛ржмрзЗ
                ржкрж░рж┐ржЪрж╛рж▓рж┐ржд рж╣ржмрзЗред
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default AmbulanceBooking;
